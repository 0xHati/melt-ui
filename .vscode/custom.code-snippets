{
	"Component Template": {
		"prefix": "comp",
		"body": [
			"<script lang=\"ts\" context=\"module\">",
			"\timport type { BaseProps } from '$$lib/types';",
			"",
			"\texport type ${TM_DIRECTORY/.+\\/(.+)/$1/}${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}Props = BaseProps;",
			"</script>",
			"",
			"<script lang=\"ts\">",
			"\ttype $$$Props = ${TM_DIRECTORY/.+\\/(.+)/$1/}${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}Props;",
			"</script>",
			"",
			"<div {...$$$restProps}>",
			"\t<slot />",
			"</div>",
			""
		],
		"description": "Component Template"
	},
	"Controlled Prop": {
		"prefix": "reactive-ctx",
		"body": [
			"type ${TM_DIRECTORY/.+\\/(.+)/$1/}${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}Context = {",
			"};",
			"",
			"const { getContext, setContext } = reactiveContext<${TM_DIRECTORY/.+\\/(.+)/$1/}${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}Context>();",
			"export const get${TM_DIRECTORY/.+\\/(.+)/$1/}${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}Context = getContext;"
		],
		"description": "Controlled Prop"
	}
}