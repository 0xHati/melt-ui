import{s as _s,p as ss,a as F,d as b,i,v as es,w as as,x as ns,f as E,e as w,c as C,b as D,h as k,j as gs,l as v,n as Bs,o as qs,t as g,k as h,P as K,R as Q,A as R,g as Xs}from"./scheduler.2943ef39.js";import{S as hs,i as Fs,c as y,a as m,m as d,t as u,b as $,d as _,g as Zs,e as se}from"./index.c70d9825.js";import{g as ee,a as Os}from"./spread.8a54911c.js";import{L as ae}from"./layout.2e29c1fc.js";import{P as G,a as J,H as Gs,A as vs}from"./pre.c9cb050e.js";import{c as Ws}from"./select.svelte_svelte_type_style_lang.ffbea3ad.js";import{H as bs}from"./h2.b67d1f17.js";import{f as ne}from"./index.a1398546.js";import"./paths.4b1db0ef.js";import{R as te,L as oe}from"./list.a1735f60.js";const le=p=>({tab:p&8}),Ys=p=>({tab:p[3]});function pe(p){let s,a,e;s=new oe({});const t=p[1].default,n=ss(t,p,p[2],Ys);return{c(){y(s.$$.fragment),a=F(),n&&n.c()},l(l){m(s.$$.fragment,l),a=b(l),n&&n.l(l)},m(l,c){d(s,l,c),i(l,a,c),n&&n.m(l,c),e=!0},p(l,c){n&&n.p&&(!e||c&12)&&es(n,t,l,l[2],e?ns(t,l[2],c,le):as(l[2]),Ys)},i(l){e||(u(s.$$.fragment,l),u(n,l),e=!0)},o(l){$(s.$$.fragment,l),$(n,l),e=!1},d(l){l&&E(a),_(s,l),n&&n.d(l)}}}function re(p){let s,a;return s=new te({props:{tabs:p[0],$$slots:{default:[pe,({tab:e})=>({3:e}),({tab:e})=>e?8:0]},$$scope:{ctx:p}}}),{c(){y(s.$$.fragment)},l(e){m(s.$$.fragment,e)},m(e,t){d(s,e,t),a=!0},p(e,[t]){const n={};t&1&&(n.tabs=e[0]),t&12&&(n.$$scope={dirty:t,ctx:e}),s.$set(n)},i(e){a||(u(s.$$.fragment,e),a=!0)},o(e){$(s.$$.fragment,e),a=!1},d(e){_(s,e)}}}function ce(p,s,a){let{$$slots:e={},$$scope:t}=s,{tabs:n=[]}=s;return p.$$set=l=>{"tabs"in l&&a(0,n=l.tabs),"$$scope"in l&&a(2,t=l.$$scope)},[n,e,t]}class Ee extends hs{constructor(s){super(),Fs(this,s,ce,re,_s,{tabs:0})}}function ie(p){let s,a,e,t;const n=p[4].default,l=ss(n,p,p[3],null);return{c(){s=w("div"),a=w("p"),l&&l.c(),this.h()},l(c){s=C(c,"DIV",{class:!0});var f=D(s);a=C(f,"P",{});var B=D(a);l&&l.l(B),B.forEach(E),f.forEach(E),this.h()},h(){k(s,"class",e=Ws(p[2]({type:p[1],className:p[0]})))},m(c,f){i(c,s,f),gs(s,a),l&&l.m(a,null),t=!0},p(c,[f]){l&&l.p&&(!t||f&8)&&es(l,n,c,c[3],t?ns(n,c[3],f,null):as(c[3]),null),(!t||f&3&&e!==(e=Ws(c[2]({type:c[1],className:c[0]}))))&&k(s,"class",e)},i(c){t||(u(l,c),t=!0)},o(c){$(l,c),t=!1},d(c){c&&E(s),l&&l.d(c)}}}function fe(p,s,a){let{$$slots:e={},$$scope:t}=s;const n=ne({base:'relative rounded-tr-md rounded-br-md px-5 py-3 before:absolute before:left-0 before:top-0 before:h-full before:w-0.5 before:content-[""] my-6 text-sm',variants:{type:{default:"before:bg-magnum-700 bg-magnum-700/10 text-white border-magnum-700",info:"before:bg-blue-500 bg-blue-500/10 text-white border-blue-500",warning:"before:bg-yellow-500 bg-yellow-500/10 text-white border-yellow-500",danger:"before:bg-red-500 bg-red-500/10 text-white border-red-500",success:"before:bg-green-500 bg-green-500/10 text-white border-green-500"}}});let{class:l=void 0}=s,{type:c="default"}=s;return p.$$set=f=>{"class"in f&&a(0,l=f.class),"type"in f&&a(1,c=f.type),"$$scope"in f&&a(3,t=f.$$scope)},[l,c,n,t,e]}class zs extends hs{constructor(s){super(),Fs(this,s,fe,ie,_s,{class:0,type:1})}}const ue=p=>({}),Rs=p=>({}),$e=p=>({}),Js=p=>({}),ye=p=>({}),Ks=p=>({});function me(p){let s;const a=p[0].pnpm,e=ss(a,p,p[1],Rs);return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,n){e&&e.m(t,n),s=!0},p(t,n){e&&e.p&&(!s||n&2)&&es(e,a,t,t[1],s?ns(a,t[1],n,ue):as(t[1]),Rs)},i(t){s||(u(e,t),s=!0)},o(t){$(e,t),s=!1},d(t){e&&e.d(t)}}}function de(p){let s;const a=p[0].yarn,e=ss(a,p,p[1],Js);return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,n){e&&e.m(t,n),s=!0},p(t,n){e&&e.p&&(!s||n&2)&&es(e,a,t,t[1],s?ns(a,t[1],n,$e):as(t[1]),Js)},i(t){s||(u(e,t),s=!0)},o(t){$(e,t),s=!1},d(t){e&&e.d(t)}}}function _e(p){let s;const a=p[0].npm,e=ss(a,p,p[1],Ks);return{c(){e&&e.c()},l(t){e&&e.l(t)},m(t,n){e&&e.m(t,n),s=!0},p(t,n){e&&e.p&&(!s||n&2)&&es(e,a,t,t[1],s?ns(a,t[1],n,ye):as(t[1]),Ks)},i(t){s||(u(e,t),s=!0)},o(t){$(e,t),s=!1},d(t){e&&e.d(t)}}}function ge(p){let s,a,e,t;const n=[_e,de,me],l=[];function c(f,B){return f[2]==="npm"?0:f[2]==="yarn"?1:f[2]==="pnpm"?2:-1}return~(s=c(p))&&(a=l[s]=n[s](p)),{c(){a&&a.c(),e=v()},l(f){a&&a.l(f),e=v()},m(f,B){~s&&l[s].m(f,B),i(f,e,B),t=!0},p(f,B){let x=s;s=c(f),s===x?~s&&l[s].p(f,B):(a&&(Zs(),$(l[x],1,1,()=>{l[x]=null}),se()),~s?(a=l[s],a?a.p(f,B):(a=l[s]=n[s](f),a.c()),u(a,1),a.m(e.parentNode,e)):a=null)},i(f){t||(u(a),t=!0)},o(f){$(a),t=!1},d(f){f&&E(e),~s&&l[s].d(f)}}}function he(p){let s,a;return s=new Ee({props:{tabs:["npm","yarn","pnpm"],$$slots:{default:[ge,({tab:e})=>({2:e}),({tab:e})=>e?4:0]},$$scope:{ctx:p}}}),{c(){y(s.$$.fragment)},l(e){m(s.$$.fragment,e)},m(e,t){d(s,e,t),a=!0},p(e,[t]){const n={};t&6&&(n.$$scope={dirty:t,ctx:e}),s.$set(n)},i(e){a||(u(s.$$.fragment,e),a=!0)},o(e){$(s.$$.fragment,e),a=!1},d(e){_(s,e)}}}function Fe(p,s,a){let{$$slots:e={},$$scope:t}=s;return p.$$set=n=>{"$$scope"in n&&a(1,t=n.$$scope)},[e,t]}class be extends hs{constructor(s){super(),Fs(this,s,Fe,he,_s,{})}}function Be(p){let s;return{c(){s=g("Installation")},l(a){s=h(a,"Installation")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function ve(p){let s;return{c(){s=g("Install Melt UI with your package manager of choice.")},l(a){s=h(a,"Install Melt UI with your package manager of choice.")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function we(p){let s,a='<code data-language="bash" data-theme="default"><span data-line=""><span style="color: #B392F0">npm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF" data-highlighted-chars="" data-chars-id="melt">@melt-ui</span><span style="color: #9ECBFF">/</span><span style="color: #9ECBFF" data-highlighted-chars="" data-chars-id="melt">svelte</span></span></code>',e;return{c(){s=new K(!1),e=v(),this.h()},l(t){s=Q(t,!1),e=v(),this.h()},h(){s.a=e},m(t,n){s.m(a,t,n),i(t,e,n)},p:R,d(t){t&&(E(e),s.d())}}}function Ce(p){let s,a,e,t;return e=new J({props:{"data-language":"bash","data-theme":"default",$$slots:{default:[we]},$$scope:{ctx:p}}}),{c(){s=w("span"),a=w("div"),y(e.$$.fragment),this.h()},l(n){s=C(n,"SPAN",{slot:!0});var l=D(s);a=C(l,"DIV",{"data-rehype-pretty-code-fragment":!0});var c=D(a);m(e.$$.fragment,c),c.forEach(E),l.forEach(E),this.h()},h(){k(a,"data-rehype-pretty-code-fragment",""),k(s,"slot","npm")},m(n,l){i(n,s,l),gs(s,a),d(e,a,null),t=!0},p(n,l){const c={};l&2&&(c.$$scope={dirty:l,ctx:n}),e.$set(c)},i(n){t||(u(e.$$.fragment,n),t=!0)},o(n){$(e.$$.fragment,n),t=!1},d(n){n&&E(s),_(e)}}}function De(p){let s,a='<code data-language="bash" data-theme="default"><span data-line=""><span style="color: #B392F0">yarn</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF" data-highlighted-chars="" data-chars-id="melt">@melt-ui</span><span style="color: #9ECBFF">/</span><span style="color: #9ECBFF" data-highlighted-chars="" data-chars-id="melt">svelte</span></span></code>',e;return{c(){s=new K(!1),e=v(),this.h()},l(t){s=Q(t,!1),e=v(),this.h()},h(){s.a=e},m(t,n){s.m(a,t,n),i(t,e,n)},p:R,d(t){t&&(E(e),s.d())}}}function ke(p){let s,a,e,t;return e=new J({props:{"data-language":"bash","data-theme":"default",$$slots:{default:[De]},$$scope:{ctx:p}}}),{c(){s=w("span"),a=w("div"),y(e.$$.fragment),this.h()},l(n){s=C(n,"SPAN",{slot:!0});var l=D(s);a=C(l,"DIV",{"data-rehype-pretty-code-fragment":!0});var c=D(a);m(e.$$.fragment,c),c.forEach(E),l.forEach(E),this.h()},h(){k(a,"data-rehype-pretty-code-fragment",""),k(s,"slot","yarn")},m(n,l){i(n,s,l),gs(s,a),d(e,a,null),t=!0},p(n,l){const c={};l&2&&(c.$$scope={dirty:l,ctx:n}),e.$set(c)},i(n){t||(u(e.$$.fragment,n),t=!0)},o(n){$(e.$$.fragment,n),t=!1},d(n){n&&E(s),_(e)}}}function xe(p){let s,a='<code data-language="bash" data-theme="default"><span data-line=""><span style="color: #B392F0">pnpm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF" data-highlighted-chars="" data-chars-id="melt">@melt-ui</span><span style="color: #9ECBFF">/</span><span style="color: #9ECBFF" data-highlighted-chars="" data-chars-id="melt">svelte</span></span></code>',e;return{c(){s=new K(!1),e=v(),this.h()},l(t){s=Q(t,!1),e=v(),this.h()},h(){s.a=e},m(t,n){s.m(a,t,n),i(t,e,n)},p:R,d(t){t&&(E(e),s.d())}}}function Se(p){let s,a,e,t;return e=new J({props:{"data-language":"bash","data-theme":"default",$$slots:{default:[xe]},$$scope:{ctx:p}}}),{c(){s=w("span"),a=w("div"),y(e.$$.fragment),this.h()},l(n){s=C(n,"SPAN",{slot:!0});var l=D(s);a=C(l,"DIV",{"data-rehype-pretty-code-fragment":!0});var c=D(a);m(e.$$.fragment,c),c.forEach(E),l.forEach(E),this.h()},h(){k(a,"data-rehype-pretty-code-fragment",""),k(s,"slot","pnpm")},m(n,l){i(n,s,l),gs(s,a),d(e,a,null),t=!0},p(n,l){const c={};l&2&&(c.$$scope={dirty:l,ctx:n}),e.$set(c)},i(n){t||(u(e.$$.fragment,n),t=!0)},o(n){$(e.$$.fragment,n),t=!1},d(n){n&&E(s),_(e)}}}function Ie(p){let s;return{c(){s=g("P.S. These tabs were built using Melt! Try using them with the arrow keys.")},l(a){s=h(a,"P.S. These tabs were built using Melt! Try using them with the arrow keys.")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function Ae(p){let s;return{c(){s=g("Usage")},l(a){s=h(a,"Usage")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function Te(p){let s;return{c(){s=g(`Melt UI exposes a number of component builders. Let's say you want a Collapsible
component:`)},l(a){s=h(a,`Melt UI exposes a number of component builders. Let's say you want a Collapsible
component:`)},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function He(p){let s,a=`<code data-language="svelte" data-theme="default"><span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">script</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #F97583">import</span><span style="color: #E1E4E8"> { createCollapsible } </span><span style="color: #F97583">from</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">'@melt-ui/svelte'</span><span style="color: #E1E4E8">;</span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #F97583">const</span><span style="color: #E1E4E8"> { </span><span style="color: #79B8FF">open</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">root</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">content</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">trigger</span><span style="color: #E1E4E8"> } </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">createCollapsible</span><span style="color: #E1E4E8">();</span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">script</span><span style="color: #E1E4E8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">{</span><span style="color: #F97583">...</span><span style="color: #E1E4E8">$root</span><span style="color: #B392F0">}</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  &#x3C;</span><span style="color: #85E89D">button</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">{</span><span style="color: #F97583">...</span><span style="color: #E1E4E8">$trigger</span><span style="color: #B392F0">}</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">use</span><span style="color: #E1E4E8">:</span><span style="color: #FFAB70">trigger</span><span style="color: #E1E4E8">.</span><span style="color: #B392F0">action</span><span style="color: #E1E4E8">>{$open </span><span style="color: #F97583">?</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">'Close'</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">'Open'</span><span style="color: #E1E4E8">}&#x3C;/</span><span style="color: #85E89D">button</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  &#x3C;</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">{</span><span style="color: #F97583">...</span><span style="color: #E1E4E8">$content</span><span style="color: #B392F0">}</span><span style="color: #E1E4E8">>Obi-Wan says: Hello there!&#x3C;/</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8">></span></span></code>`,e;return{c(){s=new K(!1),e=v(),this.h()},l(t){s=Q(t,!1),e=v(),this.h()},h(){s.a=e},m(t,n){s.m(a,t,n),i(t,e,n)},p:R,d(t){t&&(E(e),s.d())}}}function Ue(p){let s,a,e="createCollapsible",t;return{c(){s=g("You'll see that "),a=w("code"),a.textContent=e,t=g(` returns an object with a couple of
properties. Some of these are stores, and others are stores that return
functions. The stores are used to manage the state of the component, and the
functions are used to pass arguments to the element.`)},l(n){s=h(n,"You'll see that "),a=C(n,"CODE",{["data-svelte-h"]:!0}),Xs(a)!=="svelte-1exohvm"&&(a.textContent=e),t=h(n,` returns an object with a couple of
properties. Some of these are stores, and others are stores that return
functions. The stores are used to manage the state of the component, and the
functions are used to pass arguments to the element.`)},m(n,l){i(n,s,l),i(n,a,l),i(n,t,l)},p:R,d(n){n&&(E(s),E(a),E(t))}}}function Me(p){let s;return{c(){s=g(`Each component is different, so be sure to check out the documentation before
attempting to use one.`)},l(a){s=h(a,`Each component is different, so be sure to check out the documentation before
attempting to use one.`)},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function Ne(p){let s;return{c(){s=g("Styling")},l(a){s=h(a,"Styling")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function Pe(p){let s;return{c(){s=g("TailwindCSS")},l(a){s=h(a,"TailwindCSS")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function je(p){let s,a,e,t;return a=new vs({props:{href:"https://tailwindcss.com",rel:"nofollow",$$slots:{default:[Pe]},$$scope:{ctx:p}}}),{c(){s=g(`Melt UI leaves the styling up to you. Whether you prefer scoped or global CSS, a
utility framework like `),y(a.$$.fragment),e=g(`, or third-party
components, as long as you can pass in Melt's props, it's all good.`)},l(n){s=h(n,`Melt UI leaves the styling up to you. Whether you prefer scoped or global CSS, a
utility framework like `),m(a.$$.fragment,n),e=h(n,`, or third-party
components, as long as you can pass in Melt's props, it's all good.`)},m(n,l){i(n,s,l),d(a,n,l),i(n,e,l),t=!0},p(n,l){const c={};l&2&&(c.$$scope={dirty:l,ctx:n}),a.$set(c)},i(n){t||(u(a.$$.fragment,n),t=!0)},o(n){$(a.$$.fragment,n),t=!1},d(n){n&&(E(s),E(e)),_(a,n)}}}function Ve(p){let s,a=`<code data-language="svelte" data-theme="default"><span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">script</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #F97583">import</span><span style="color: #E1E4E8"> { createCollapsible } </span><span style="color: #F97583">from</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">'@melt-ui/svelte'</span><span style="color: #E1E4E8">;</span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #F97583">import</span><span style="color: #E1E4E8"> Button </span><span style="color: #F97583">from</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">'$components/button.svelte'</span><span style="color: #E1E4E8">;</span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #F97583">const</span><span style="color: #E1E4E8"> { </span><span style="color: #79B8FF">open</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">root</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">content</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">trigger</span><span style="color: #E1E4E8"> } </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">createCollapsible</span><span style="color: #E1E4E8">();</span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">script</span><span style="color: #E1E4E8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #6A737D">&#x3C;!-- Using Svelte Scoped Styles --></span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">class</span><span style="color: #E1E4E8">=</span><span style="color: #9ECBFF">"root"</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">{</span><span style="color: #F97583">...</span><span style="color: #E1E4E8">$root</span><span style="color: #B392F0">}</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #6A737D">&#x3C;!-- Using an external component --></span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #79B8FF">Button</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">on</span><span style="color: #E1E4E8">:</span><span style="color: #B392F0">click</span><span style="color: #E1E4E8">={() </span><span style="color: #F97583">=></span><span style="color: #E1E4E8"> console.</span><span style="color: #B392F0">log</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">'clicked'</span><span style="color: #E1E4E8">)} </span><span style="color: #B392F0">{</span><span style="color: #F97583">...</span><span style="color: #E1E4E8">$trigger</span><span style="color: #B392F0">}</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">action</span><span style="color: #E1E4E8">={trigger.action}></span></span>
<span data-line=""><span style="color: #E1E4E8">  {$open </span><span style="color: #F97583">?</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">'Close'</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">'Open'</span><span style="color: #E1E4E8">}</span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #79B8FF">Button</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #6A737D">&#x3C;!-- Using an utility class library, such as Tailwind --></span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">class</span><span style="color: #E1E4E8">=</span><span style="color: #9ECBFF">"rounded-md p-4 text-orange-500 shadow-sm"</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">{</span><span style="color: #F97583">...</span><span style="color: #E1E4E8">$content</span><span style="color: #B392F0">}</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  Obi-Wan says: Hello there!</span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">style</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #B392F0">.root</span><span style="color: #E1E4E8"> {</span></span>
<span data-line=""><span style="color: #E1E4E8">    </span><span style="color: #79B8FF">display</span><span style="color: #E1E4E8">: </span><span style="color: #79B8FF">flex</span><span style="color: #E1E4E8">;</span></span>
<span data-line=""><span style="color: #E1E4E8">    </span><span style="color: #79B8FF">flex-direction</span><span style="color: #E1E4E8">: </span><span style="color: #79B8FF">column</span><span style="color: #E1E4E8">;</span></span>
<span data-line=""><span style="color: #E1E4E8">  }</span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">style</span><span style="color: #E1E4E8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #6A737D">&#x3C;!-- Button.svelte --></span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">script</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #F97583">import</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">type</span><span style="color: #E1E4E8"> { Action } </span><span style="color: #F97583">from</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">'svelte/action'</span><span style="color: #E1E4E8">;</span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #F97583">export</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">let</span><span style="color: #E1E4E8"> action</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">Action</span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">script</span><span style="color: #E1E4E8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">button</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">use</span><span style="color: #E1E4E8">:</span><span style="color: #FFAB70">action</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  &#x3C;</span><span style="color: #F97583">slot</span><span style="color: #E1E4E8"> /></span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">button</span><span style="color: #E1E4E8">></span></span></code>`,e;return{c(){s=new K(!1),e=v(),this.h()},l(t){s=Q(t,!1),e=v(),this.h()},h(){s.a=e},m(t,n){s.m(a,t,n),i(t,e,n)},p:R,d(t){t&&(E(e),s.d())}}}function Le(p){let s;return{c(){s=g("Animations")},l(a){s=h(a,"Animations")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function qe(p){let s;return{c(){s=g(`By passing the builder returned props to an element, certain data and aria
attributes will automatically be added/and or altered for you. These changes can
then be used for animation purposes, should you desire to do so.`)},l(a){s=h(a,`By passing the builder returned props to an element, certain data and aria
attributes will automatically be added/and or altered for you. These changes can
then be used for animation purposes, should you desire to do so.`)},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function Oe(p){let s,a=`<code data-language="svelte" data-theme="default"><span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">script</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #F97583">import</span><span style="color: #E1E4E8"> { createCollapsible } </span><span style="color: #F97583">from</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">'@melt-ui/svelte'</span><span style="color: #E1E4E8">;</span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #F97583">const</span><span style="color: #E1E4E8"> { </span><span style="color: #79B8FF">root</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">content</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">trigger</span><span style="color: #E1E4E8"> } </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">createCollapsible</span><span style="color: #E1E4E8">();</span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">script</span><span style="color: #E1E4E8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">{</span><span style="color: #F97583">...</span><span style="color: #E1E4E8">$root</span><span style="color: #B392F0">}</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  &#x3C;</span><span style="color: #85E89D">button</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">{</span><span style="color: #F97583">...</span><span style="color: #E1E4E8">$trigger</span><span style="color: #B392F0">}</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">use</span><span style="color: #E1E4E8">:</span><span style="color: #FFAB70">trigger</span><span style="color: #E1E4E8">.</span><span style="color: #B392F0">action</span><span style="color: #E1E4E8">> Toggle &#x3C;/</span><span style="color: #85E89D">button</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  &#x3C;</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">class</span><span style="color: #E1E4E8">=</span><span style="color: #9ECBFF">"content"</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">{</span><span style="color: #F97583">...</span><span style="color: #E1E4E8">$content</span><span style="color: #B392F0">}</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">    &#x3C;</span><span style="color: #85E89D">p</span><span style="color: #E1E4E8">>sveltejs/svelte&#x3C;/</span><span style="color: #85E89D">p</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">    &#x3C;</span><span style="color: #85E89D">p</span><span style="color: #E1E4E8">>sveltejs/kit&#x3C;/</span><span style="color: #85E89D">p</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  &#x3C;/</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">div</span><span style="color: #E1E4E8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;</span><span style="color: #85E89D">style</span><span style="color: #E1E4E8">></span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #B392F0">.content</span><span style="color: #E1E4E8"> {</span></span>
<span data-line=""><span style="color: #E1E4E8">    </span><span style="color: #79B8FF">display</span><span style="color: #E1E4E8">: </span><span style="color: #79B8FF">block</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">!important</span><span style="color: #E1E4E8">; </span><span style="color: #6A737D">/* Ignore the hidden attribute */</span></span>
<span data-line=""><span style="color: #E1E4E8">    </span><span style="color: #79B8FF">transition</span><span style="color: #E1E4E8">: opacity </span><span style="color: #79B8FF">200</span><span style="color: #F97583">ms</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">ease</span><span style="color: #E1E4E8">;</span></span>
<span data-line=""><span style="color: #E1E4E8">  }</span></span>
<span data-line=""><span style="color: #E1E4E8">  </span><span style="color: #B392F0">.content</span><span style="color: #E1E4E8">[</span><span style="color: #B392F0">data-state</span><span style="color: #F97583">=</span><span style="color: #9ECBFF">'closed'</span><span style="color: #E1E4E8">] {</span></span>
<span data-line=""><span style="color: #E1E4E8">    </span><span style="color: #79B8FF">opacity</span><span style="color: #E1E4E8">: </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;</span></span>
<span data-line=""><span style="color: #E1E4E8">  }</span></span>
<span data-line=""><span style="color: #E1E4E8">&#x3C;/</span><span style="color: #85E89D">style</span><span style="color: #E1E4E8">></span></span></code>`,e;return{c(){s=new K(!1),e=v(),this.h()},l(t){s=Q(t,!1),e=v(),this.h()},h(){s.a=e},m(t,n){s.m(a,t,n),i(t,e,n)},p:R,d(t){t&&(E(e),s.d())}}}function Ge(p){let s;return{c(){s=g("Svelte transitions can also be utilized. However, it is important to note that this may interfere with default functionality in particular components, such as focus management, so proceed with caution.")},l(a){s=h(a,"Svelte transitions can also be utilized. However, it is important to note that this may interfere with default functionality in particular components, such as focus management, so proceed with caution.")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function We(p){let s;return{c(){s=g("Need help?")},l(a){s=h(a,"Need help?")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function Ye(p){let s;return{c(){s=g("open an issue")},l(a){s=h(a,"open an issue")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function ze(p){let s,a,e,t;return a=new vs({props:{href:"https://github.com/melt-ui/melt-ui/issues/new",rel:"nofollow",$$slots:{default:[Ye]},$$scope:{ctx:p}}}),{c(){s=g(`If you run into any bugs, or would like to request a feature, please feel free
to `),y(a.$$.fragment),e=g(" on GitHub.")},l(n){s=h(n,`If you run into any bugs, or would like to request a feature, please feel free
to `),m(a.$$.fragment,n),e=h(n," on GitHub.")},m(n,l){i(n,s,l),d(a,n,l),i(n,e,l),t=!0},p(n,l){const c={};l&2&&(c.$$scope={dirty:l,ctx:n}),a.$set(c)},i(n){t||(u(a.$$.fragment,n),t=!0)},o(n){$(a.$$.fragment,n),t=!1},d(n){n&&(E(s),E(e)),_(a,n)}}}function Re(p){let s;return{c(){s=g("Discord")},l(a){s=h(a,"Discord")},m(a,e){i(a,s,e)},d(a){a&&E(s)}}}function Je(p){let s,a,e,t;return a=new vs({props:{href:"https://discord.gg/cee8gHrznd",rel:"nofollow",$$slots:{default:[Re]},$$scope:{ctx:p}}}),{c(){s=g("You can also reach out to us on "),y(a.$$.fragment),e=g(` if you
have any questions or just want to chat.`)},l(n){s=h(n,"You can also reach out to us on "),m(a.$$.fragment,n),e=h(n,` if you
have any questions or just want to chat.`)},m(n,l){i(n,s,l),d(a,n,l),i(n,e,l),t=!0},p(n,l){const c={};l&2&&(c.$$scope={dirty:l,ctx:n}),a.$set(c)},i(n){t||(u(a.$$.fragment,n),t=!0)},o(n){$(a.$$.fragment,n),t=!1},d(n){n&&(E(s),E(e)),_(a,n)}}}function Ke(p){let s,a,e,t,n,l,c,f,B,x,S,ts,W,I,os,A,ls,T,ps,H,rs,U,cs,Y,M,Es,N,is,P,fs,z,j,us,V,$s,L,ys,q,ms,O,ds;return s=new bs({props:{$$slots:{default:[Be]},$$scope:{ctx:p}}}),e=new G({props:{$$slots:{default:[ve]},$$scope:{ctx:p}}}),n=new be({props:{$$slots:{pnpm:[Se],yarn:[ke],npm:[Ce]},$$scope:{ctx:p}}}),c=new zs({props:{$$slots:{default:[Ie]},$$scope:{ctx:p}}}),B=new bs({props:{$$slots:{default:[Ae]},$$scope:{ctx:p}}}),S=new G({props:{$$slots:{default:[Te]},$$scope:{ctx:p}}}),I=new J({props:{"data-language":"svelte","data-theme":"default",$$slots:{default:[He]},$$scope:{ctx:p}}}),A=new G({props:{$$slots:{default:[Ue]},$$scope:{ctx:p}}}),T=new G({props:{$$slots:{default:[Me]},$$scope:{ctx:p}}}),H=new Gs({props:{$$slots:{default:[Ne]},$$scope:{ctx:p}}}),U=new G({props:{$$slots:{default:[je]},$$scope:{ctx:p}}}),M=new J({props:{"data-language":"svelte","data-theme":"default",$$slots:{default:[Ve]},$$scope:{ctx:p}}}),N=new Gs({props:{$$slots:{default:[Le]},$$scope:{ctx:p}}}),P=new G({props:{$$slots:{default:[qe]},$$scope:{ctx:p}}}),j=new J({props:{"data-language":"svelte","data-theme":"default",$$slots:{default:[Oe]},$$scope:{ctx:p}}}),V=new zs({props:{$$slots:{default:[Ge]},$$scope:{ctx:p}}}),L=new bs({props:{$$slots:{default:[We]},$$scope:{ctx:p}}}),q=new G({props:{$$slots:{default:[ze]},$$scope:{ctx:p}}}),O=new G({props:{$$slots:{default:[Je]},$$scope:{ctx:p}}}),{c(){y(s.$$.fragment),a=F(),y(e.$$.fragment),t=F(),y(n.$$.fragment),l=F(),y(c.$$.fragment),f=F(),y(B.$$.fragment),x=F(),y(S.$$.fragment),ts=F(),W=w("div"),y(I.$$.fragment),os=F(),y(A.$$.fragment),ls=F(),y(T.$$.fragment),ps=F(),y(H.$$.fragment),rs=F(),y(U.$$.fragment),cs=F(),Y=w("div"),y(M.$$.fragment),Es=F(),y(N.$$.fragment),is=F(),y(P.$$.fragment),fs=F(),z=w("div"),y(j.$$.fragment),us=F(),y(V.$$.fragment),$s=F(),y(L.$$.fragment),ys=F(),y(q.$$.fragment),ms=F(),y(O.$$.fragment),this.h()},l(o){m(s.$$.fragment,o),a=b(o),m(e.$$.fragment,o),t=b(o),m(n.$$.fragment,o),l=b(o),m(c.$$.fragment,o),f=b(o),m(B.$$.fragment,o),x=b(o),m(S.$$.fragment,o),ts=b(o),W=C(o,"DIV",{"data-rehype-pretty-code-fragment":!0});var r=D(W);m(I.$$.fragment,r),r.forEach(E),os=b(o),m(A.$$.fragment,o),ls=b(o),m(T.$$.fragment,o),ps=b(o),m(H.$$.fragment,o),rs=b(o),m(U.$$.fragment,o),cs=b(o),Y=C(o,"DIV",{"data-rehype-pretty-code-fragment":!0});var X=D(Y);m(M.$$.fragment,X),X.forEach(E),Es=b(o),m(N.$$.fragment,o),is=b(o),m(P.$$.fragment,o),fs=b(o),z=C(o,"DIV",{"data-rehype-pretty-code-fragment":!0});var Z=D(z);m(j.$$.fragment,Z),Z.forEach(E),us=b(o),m(V.$$.fragment,o),$s=b(o),m(L.$$.fragment,o),ys=b(o),m(q.$$.fragment,o),ms=b(o),m(O.$$.fragment,o),this.h()},h(){k(W,"data-rehype-pretty-code-fragment",""),k(Y,"data-rehype-pretty-code-fragment",""),k(z,"data-rehype-pretty-code-fragment","")},m(o,r){d(s,o,r),i(o,a,r),d(e,o,r),i(o,t,r),d(n,o,r),i(o,l,r),d(c,o,r),i(o,f,r),d(B,o,r),i(o,x,r),d(S,o,r),i(o,ts,r),i(o,W,r),d(I,W,null),i(o,os,r),d(A,o,r),i(o,ls,r),d(T,o,r),i(o,ps,r),d(H,o,r),i(o,rs,r),d(U,o,r),i(o,cs,r),i(o,Y,r),d(M,Y,null),i(o,Es,r),d(N,o,r),i(o,is,r),d(P,o,r),i(o,fs,r),i(o,z,r),d(j,z,null),i(o,us,r),d(V,o,r),i(o,$s,r),d(L,o,r),i(o,ys,r),d(q,o,r),i(o,ms,r),d(O,o,r),ds=!0},p(o,r){const X={};r&2&&(X.$$scope={dirty:r,ctx:o}),s.$set(X);const Z={};r&2&&(Z.$$scope={dirty:r,ctx:o}),e.$set(Z);const ws={};r&2&&(ws.$$scope={dirty:r,ctx:o}),n.$set(ws);const Cs={};r&2&&(Cs.$$scope={dirty:r,ctx:o}),c.$set(Cs);const Ds={};r&2&&(Ds.$$scope={dirty:r,ctx:o}),B.$set(Ds);const ks={};r&2&&(ks.$$scope={dirty:r,ctx:o}),S.$set(ks);const xs={};r&2&&(xs.$$scope={dirty:r,ctx:o}),I.$set(xs);const Ss={};r&2&&(Ss.$$scope={dirty:r,ctx:o}),A.$set(Ss);const Is={};r&2&&(Is.$$scope={dirty:r,ctx:o}),T.$set(Is);const As={};r&2&&(As.$$scope={dirty:r,ctx:o}),H.$set(As);const Ts={};r&2&&(Ts.$$scope={dirty:r,ctx:o}),U.$set(Ts);const Hs={};r&2&&(Hs.$$scope={dirty:r,ctx:o}),M.$set(Hs);const Us={};r&2&&(Us.$$scope={dirty:r,ctx:o}),N.$set(Us);const Ms={};r&2&&(Ms.$$scope={dirty:r,ctx:o}),P.$set(Ms);const Ns={};r&2&&(Ns.$$scope={dirty:r,ctx:o}),j.$set(Ns);const Ps={};r&2&&(Ps.$$scope={dirty:r,ctx:o}),V.$set(Ps);const js={};r&2&&(js.$$scope={dirty:r,ctx:o}),L.$set(js);const Vs={};r&2&&(Vs.$$scope={dirty:r,ctx:o}),q.$set(Vs);const Ls={};r&2&&(Ls.$$scope={dirty:r,ctx:o}),O.$set(Ls)},i(o){ds||(u(s.$$.fragment,o),u(e.$$.fragment,o),u(n.$$.fragment,o),u(c.$$.fragment,o),u(B.$$.fragment,o),u(S.$$.fragment,o),u(I.$$.fragment,o),u(A.$$.fragment,o),u(T.$$.fragment,o),u(H.$$.fragment,o),u(U.$$.fragment,o),u(M.$$.fragment,o),u(N.$$.fragment,o),u(P.$$.fragment,o),u(j.$$.fragment,o),u(V.$$.fragment,o),u(L.$$.fragment,o),u(q.$$.fragment,o),u(O.$$.fragment,o),ds=!0)},o(o){$(s.$$.fragment,o),$(e.$$.fragment,o),$(n.$$.fragment,o),$(c.$$.fragment,o),$(B.$$.fragment,o),$(S.$$.fragment,o),$(I.$$.fragment,o),$(A.$$.fragment,o),$(T.$$.fragment,o),$(H.$$.fragment,o),$(U.$$.fragment,o),$(M.$$.fragment,o),$(N.$$.fragment,o),$(P.$$.fragment,o),$(j.$$.fragment,o),$(V.$$.fragment,o),$(L.$$.fragment,o),$(q.$$.fragment,o),$(O.$$.fragment,o),ds=!1},d(o){o&&(E(a),E(t),E(l),E(f),E(x),E(ts),E(W),E(os),E(ls),E(ps),E(rs),E(cs),E(Y),E(Es),E(is),E(fs),E(z),E(us),E($s),E(ys),E(ms)),_(s,o),_(e,o),_(n,o),_(c,o),_(B,o),_(S,o),_(I),_(A,o),_(T,o),_(H,o),_(U,o),_(M),_(N,o),_(P,o),_(j),_(V,o),_(L,o),_(q,o),_(O,o)}}}function Qe(p){let s,a;const e=[p[0],Qs];let t={$$slots:{default:[Ke]},$$scope:{ctx:p}};for(let n=0;n<e.length;n+=1)t=Bs(t,e[n]);return s=new ae({props:t}),{c(){y(s.$$.fragment)},l(n){m(s.$$.fragment,n)},m(n,l){d(s,n,l),a=!0},p(n,[l]){const c=l&1?ee(e,[l&1&&Os(n[0]),l&0&&Os(Qs)]):{};l&2&&(c.$$scope={dirty:l,ctx:n}),s.$set(c)},i(n){a||(u(s.$$.fragment,n),a=!0)},o(n){$(s.$$.fragment,n),a=!1},d(n){_(s,n)}}}const Qs={title:"Getting Started",description:"It only takes a few lines of code to get started building components with Melt UI."};function Xe(p,s,a){return p.$$set=e=>{a(0,s=Bs(Bs({},s),qs(e)))},s=qs(s),[s]}class ca extends hs{constructor(s){super(),Fs(this,s,Xe,Qe,_s,{})}}export{ca as default,Qs as metadata};
